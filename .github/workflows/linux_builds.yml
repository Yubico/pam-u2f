name: linux

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            cc: gcc-10
          - os: ubuntu-20.04
            cc: clang-11
          - os: ubuntu-18.04
            cc: gcc-10
          - os: ubuntu-18.04
            cc: clang-10
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      if: ${{ matrix.os == 'ubuntu-18.04' }}
      run: |
        sudo add-apt-repository -y ppa:yubico/stable
        # FIXME: workaround for libfido2 1.7.0 pkg-config file
        sudo apt -qq update
        sudo apt -q install -y libcbor-dev libz-dev
    - name: Dependencies
      env:
        CC: ${{ matrix.cc }}
      run: |
        sudo apt -q update
        sudo apt install -q -y autoconf automake libtool pkg-config \
          libfido2-dev libpam-dev gengetopt
        if [ "${CC%-*}" == "clang" ]; then
          sudo apt install -q -y ${CC%-*}-tools-${CC#clang-}
        else
          sudo apt install -q -y "${CC}"
        fi
    - name: Build
      env:
        CC: ${{ matrix.cc }}
      run: |
        /bin/bash -eux build-aux/ci/build-linux-${CC%-*}.sh
